plugins {
    id 'fabric-loom' version '1.11-SNAPSHOT'
    id 'maven-publish'
}

version = project.latest
group = project.maven_group

repositories {
    mavenLocal();
}

base {
    archivesName = project.archives_base_name
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    implementation "org.graalvm.polyglot:polyglot:${project.graal_version}"
    implementation "org.graalvm.js:js-language:${project.graal_version}"
    implementation "com.manchickas:optionated:1.1.0"
    implementation "com.manchickas:zet:1.3.0"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    include "org.graalvm.polyglot:polyglot:${project.graal_version}"
    include "org.graalvm.js:js-language:${project.graal_version}"
    include "org.graalvm.sdk:collections:${project.graal_version}"
    include "org.graalvm.sdk:nativeimage:${project.graal_version}"
    include "org.graalvm.sdk:word:${project.graal_version}"
    include "org.graalvm.sdk:jniutils:${project.graal_version}"
    include "org.graalvm.truffle:truffle-compiler:${project.graal_version}"
    include "org.graalvm.truffle:truffle-runtime:${project.graal_version}"
    include "org.graalvm.truffle:truffle-api:${project.graal_version}"
    include "org.graalvm.regex:regex:${project.graal_version}"
    include "org.graalvm.shadowed:icu4j:${project.graal_version}"
    include "com.manchickas:optionated:1.1.0"
    include "com.manchickas:zet:1.3.0"
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible())
        it.options.release.set(targetJavaVersion)
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion)
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    withSourcesJar()
}

jar {
    manifest {
        attributes(
                "Implementation-Version": project.latest
        )
    }
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }
}
